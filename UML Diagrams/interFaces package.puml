@startuml
'https://plantuml.com/class-diagram



Loadable <|-- LoadingSystem
Movable <|-- MovingSystem

class LoadingSystem <T> {
- loadedDeque : Deque <T>
+ load (object : T) : void
+ unload () : void
+ returnSize () : void
+ returnLast () : T
+ showStack () : String
}


class MovingSystem {
+ direction : Directions
- x : double
- y : double
----
+ setX (x : double) : void
+ setY (y : double) : void
+ getX (x : double) : double
+ getY (y : double) : double
+ turnLeft () : void
+ turnRight () : void
+ move (currentSpeed : double) : void
}


interface Loadable {
load (object : T) : void
unload () : void
returnSize () : double
showStack () : String
returnLast() : T
}

interface Movable{
move (currentSpeed : double) : void
turnLeft () : void
turnRight () : void
}

interface iVehicle{
getMovingSystem() : MovingSystem
getCurrentSpeed() : double
getEngine() : Engine
brake(amount : double) : void
gas (amount : double) : void
}

enum Directions {
UP
DOWN
LEFT
RIGHT
}

@enduml